collective.contentleadimage Installation
=======================

To install collective.contentleadimage into the global Python environment (or a workingenv),
using a traditional Zope 2 instance, you can do this:

 * When you're reading this you have probably already run 
   ``easy_install collective.contentleadimage``. Find out how to install setuptools
   (and EasyInstall) here:
   http://peak.telecommunity.com/DevCenter/EasyInstall

 * If you are using Zope 2.9 (not 2.10), get `pythonproducts`_ and install it 
   via::

       python setup.py install --home /path/to/instance

   into your Zope instance.

 * Create a file called ``collective.contentleadimage-configure.zcml`` in the
   ``/path/to/instance/etc/package-includes`` directory.  The file
   should only contain this::

       <include package="collective.contentleadimage" />

.. _pythonproducts: http://plone.org/products/pythonproducts

Thanks to Espen Moe-Nilssen, there are steps how to get it working in 
non-buildout based environment:

 * put content of "contentleadimage"-folder in lib/python/collective
 * add zcml file to package-includes
 * install product from quickinstaller
 * "upgrade"  from portal_setup/Upgrades
 * uninstall from quickinstaller
 * install from quickinstaller.

(upgrading before installing is not working, seems like it has to be done in 
this order)


Alternatively, if you are using zc.buildout and the plone.recipe.zope2instance
recipe to manage your project, you can do this:

 * Add ``collective.contentleadimage`` to the list of eggs to install, e.g.:
 
    [buildout]
    ...
    eggs =
        ...
        collective.contentleadimage
        
  * Tell the plone.recipe.zope2instance recipe to install a ZCML slug:
  
    [instance]
    recipe = plone.recipe.zope2instance
    ...
    zcml =
        collective.contentleadimage
        
  * Re-run buildout, e.g. with:
  
    $ ./bin/buildout
        
You can skip the ZCML slug if you are going to explicitly include the package
from another package's configure.zcml file.
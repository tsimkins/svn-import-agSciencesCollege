/*
  <dtml-with base_properties> (do not remove this)
  <dtml-call "REQUEST.set('portal_url', portal_url())"> (not this either)
*/

/* YOUR JAVASCRIPT START HERE */


// This makes the left column and the center column the same size

function resizeColumns()
{
    setTimeout("doresizeColumns()", 300);
}

function doresizeColumns()
{
    // For front page, equalize center column height 
    var bodyClass = document.body.className;
    var contentWrapper = document.getElementById("portal-column-content");
    var centerColumn = document.getElementById("centercolumn");
    var personalTools = document.getElementById("portal-personaltools");

    if(!personalTools && bodyClass.match(/template-document_homepage_view/) && contentWrapper && centerColumn && (msieversion() >= 8 || msieversion() == 0))
    {
        centerColumn.style.height = "auto";
        iHeight = centerColumn.offsetHeight;

        // failsafe so we don't infinitely loop in case something isn't as we thought.
        failsafe = 0;

        // 3 is the margin between the right inside column and the bottom.  Otherwise we go into an infinite loop!

        while (failsafe<500 && (centerColumn.offsetTop + centerColumn.offsetHeight) < (contentWrapper.offsetTop + contentWrapper.offsetHeight - 3))
        {
            iHeight++;
            failsafe++;
            centerColumn.style.height = iHeight + "px";
        }
        
    }
}

function msieversion()
{
    var ua = window.navigator.userAgent
    var msie = ua.indexOf ( "MSIE " )
    
    if ( msie > 0 )      // If Internet Explorer, return version number
        return parseInt (ua.substring (msie+5, ua.indexOf (".", msie )))
    else                 // If another browser, return 0
        return 0

}


function getElement(theId, vPadding, IEvPadding)
{
    var theElement = document.getElementById(theId) ? document.getElementById(theId) : document.createElement("div");
    theElement.elementHeight = theElement.offsetHeight ? theElement.offsetHeight : theElement.pixelHeight;
    theElement.style.height = "auto";

    if (!vPadding)
    {
        vPadding = 0;
    }

    if (document.all && IEvPadding)
    {
        theElement.vPadding = IEvPadding;
    }
    else
    {
        theElement.vPadding = vPadding;
    }
    
    return theElement;
}

function setSearch()
{
    var theSearchButton = document.getElementById("goSearch");
    var theSearchDropdown = document.getElementById("searchSource");    
    var thePloneSearchForm = document.getElementById("plonesearchform");

    if (theSearchButton && theSearchDropdown && thePloneSearchForm)
    {
        theSearchDropdown.style.display = "inline";

        theSearchButton.onclick = function () {
            return searchOnSubmit();
        }
        
        thePloneSearchForm.onsubmit = function () {
            return searchOnSubmit();
        }
    }        
}

function searchOnSubmit()
{
    var theSearchDropdown = document.getElementById("searchSource");            
    var theSearchForm = document.getElementById("GoogleSearch");
    var theSearchBox = document.getElementById("searchBox");
    var theCustomSearchBox = document.getElementById("GoogleCustomSearch");
    var currentfolderCheckbox = document.getElementById("searchbox_currentfolder_only");

    if (theSearchDropdown && theSearchForm && theSearchBox && theCustomSearchBox && currentfolderCheckbox)
    {
        var theSearchOption = theSearchDropdown.options[theSearchDropdown.selectedIndex].value;

        if (theSearchOption == "section")
        {
            currentfolderCheckbox.checked = true;
            return true;
        }
        else if (theSearchOption == "college")
        {
            theCustomSearchBox.q.value = theSearchBox.value;
            theCustomSearchBox.submit();
            return false;
        }
        else if (theSearchOption == "psu")
        {
            theSearchForm.q.value = theSearchBox.value;
            theSearchForm.site.value = "PennState";
            theSearchForm.proxystylesheet.value = "PennState";
            theSearchForm.submit();
            return false;
        }
        else
        {
            currentfolderCheckbox.checked = false;
            return true;
        }
    }
    
}

registerPloneFunction(setSearch);
registerPloneFunction(resizeColumns);

/* Show mobile version link for mobile browsers */

jq(document).ready( function () {
    var mobileRegex = /(iphone|ipod|android|blackberry|symbian|midp|windows ce|treo|webos|mobile safari)/;
    var userAgent = navigator.userAgent.toLowerCase();

    if (mobileRegex.test(userAgent))
    {
        jq("#visual-portal-wrapper").prepend(jq('<div id="mobile-version"><a href="m">Mobile Version</a></div>'));
    }

    
} );


/* Hide Short Name from Add screen */

jq(document).ready( function () {

    if (jq("#archetypes-fieldname-id input").val())
    {
        jq("#archetypes-fieldname-id").show();
    }
    
} );


/*
   if body custom css class includes 'semicolon-delimited', then split the description into separate lines delimited by semicolon
*/

jq(document).ready(
	function () {
        jq('body.custom-semicolon-delimited #content .description, body.custom-semicolon-delimited #content .documentDescription #parent-fieldname-description, body.custom-semicolon-delimited #content #parent-fieldname-description .documentDescription').each(
        
            function()
            {
                var lines = this.innerHTML.split(";");
    
                var new_html =  "<ul>";
    
                for (var i=0; i<lines.length; i++)
                {
                    var line_text = lines[i];
                    
                    if (line_text.match(":"))
                    {
                        list = line_text.split(":");
                        line_text = "<strong>" + list[0] + ":</strong>" + list[1];
                    }
                    
                    new_html = new_html + "<li>" + line_text + "</li>";
                }
    
                new_html = new_html + "</ul>";
                
                this.innerHTML = new_html
            }
        );

	}
)


/* For folders with the 'two_column' property set, split the folder listing into two columns */

jq(document).ready(
	function () {

        isTwoColumn = jq('body.custom-two-column').length;
        
        if (isTwoColumn)
        {
            // Grab items from Summary View

            summary_items = jq('body.custom-two-column #content>div>.tileItem');
            insert_after = jq('body.custom-two-column #content>div>.tileItem:last');
    
            if (summary_items.length == 0)
            {
                summary_items = jq('body.custom-two-column #region-content>div>.tileItem');
                insert_after = jq('body.custom-two-column #region-content>div>.tileItem:last');
            }


            // Grab items from Standard View
                
            listing_items = jq('body.custom-two-column #content dl:not(#history) dt');


            // Process Summary Items
    
            if (summary_items.length >= 1)
            {
                
                first_column_items = Math.ceil(summary_items.length/2)
    
                two_column_left = jq('<div id="two-column-left"></div>');
                two_column_right = jq('<div id="two-column-right"></div>');
    
                insert_after.after('<div class="visualClear">&nbsp;</div>');   
                insert_after.after(two_column_right);        
                insert_after.after(two_column_left);
                
                item_count = 0;
    
                summary_items.each(

                    function()
                    {
                        item_count++;
    
                        if (item_count <= first_column_items)
                        {
                            two_column_left.append(this);
                        }
                        else
                        {
                            two_column_right.append(this);
                        }
    
                    }
                );
                
            }
    
            else if (listing_items.length >= 1)
            {
                first_column_items = Math.ceil(listing_items.length/2)
    
                two_column_left = jq('<dl id="two-column-left"></dl>');
                two_column_right = jq('<dl id="two-column-right"></dl>');

                theList = jq('body.custom-two-column #content dl:not(#history)');
    
                theList.before(two_column_left);
                theList.before(two_column_right);  
                theList.before('<div class="visualClear">&nbsp;</div>');   
                
                item_count = 0;
    
                jq('body.custom-two-column #content dl:not(#history)').children().each(
                    function()
                    {
    
                        if (this.nodeName == 'DT')
                        {
                            item_count++;
                        }
    
                        if (item_count <= first_column_items)
                        {
                            two_column_left.append(this);
                        }
                        else
                        {
                            two_column_right.append(this);
                        }
    
                    }
                );
                
            }
    	}
	}
)




/* YOUR JAVASCRIPT STOPS HERE */

/* </dtml-with> */


<html xmlns="http://www.w3.org/1999/xhtml"
      xml:lang="en"
      lang="en"
      xmlns:tal="http://xml.zope.org/namespaces/tal"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
      metal:use-macro="context/main_template/macros/master"
      i18n:domain="plone">

  <head><title></title></head>

  <metal:javascript_head fill-slot="javascript_head_slot">
    <tal:block define="macro context/archetypes_custom_js/macros/javascript_head | nothing"
               condition="macro">
      <metal:block use-macro="macro" />
    </tal:block>
    <tal:comment replace="nothing">
      Many of the following defines duplicated from the tal:defines in the
      main slot. With base_edit, edit_macros could be reused as it was defined
      for the entire document. base_view uses main_template and thus must
      create additional defines for each slot it fills.
    </tal:comment>
    <tal:js define="fields python:here.Schema().viewableFields(here);
                    js python:here.getUniqueWidgetAttr(fields, 'helper_js')"
            condition="js"
            repeat="item js">
      <script type="text/javascript"
              charset="iso-8859-1"
              tal:condition="python:exists('portal/%s' % item)"
              tal:attributes="src string:$portal_url/$item">
      </script>
    </tal:js>
    <tal:block define="portal_type python:here.getPortalTypeName().lower().replace(' ', '_');
                       view_template python:'%s_view' % portal_type;
                       view_macros python:path('context/%s/macros|nothing' % view_template);
                       macro view_macros/js | nothing"
               condition="macro">
      <metal:block use-macro="macro" />
    </tal:block>
  </metal:javascript_head>

  <metal:css fill-slot="css_slot">
    <tal:comment replace="nothing">
      Many of the following defines duplicated from the tal:defines in the
      main slot. With base_edit, edit_macros could be reused as it was defined
      for the entire document. base_view uses main_template and thus must
      create additional defines for each slot it fills.
    </tal:comment>
    <tal:css define="fields python:here.Schema().viewableFields(here);
                     css python:here.getUniqueWidgetAttr(fields, 'helper_css')"
             condition="css"
             repeat="item css">
      <style type="text/css"
             media="all"
             tal:condition="python:exists('portal/%s' % item)"
             tal:content="structure string:<!-- @import url($portal_url/$item); -->">
      </style>
    </tal:css>
    <tal:block define="portal_type python:here.getPortalTypeName().lower().replace(' ', '_');
                       view_template python:'%s_view' % portal_type;
                       view_macros python:path('context/%s/macros|nothing' % view_template);
                       macro view_macros/css | nothing"
               condition="macro">
      <metal:block use-macro="macro" />
    </tal:block>
  </metal:css>

  <body>
    <metal:title fill-slot="content-title">
        <h1 class="documentFirstHeading" tal:content="string:${context/Title} Archives"></h1>
    </metal:title>
    <metal:fill fill-slot="content-core">
      <metal:main_macro define-macro="content-core"
            tal:define="portal_type python:here.getPortalTypeName().lower().replace(' ', '_');
            base_macros context/base/macros;
            standalone_view python:True;
            view_template python:'%s_view' % portal_type;
            view_macros python:path('context/%s/macros|nothing' % view_template);
            errors python:request.get('errors', {});
            toLocalizedTime nocall: context/@@plone/toLocalizedTime;
            kssClassesView context/@@kss_field_decorator_view;
            getKssClasses nocall:kssClassesView/getKssClassesInlineEditable;
            templateId template/getId;
            here_url view/here_url|nothing;
            show_anchors context/show_anchors|nothing;
            show_days view/show_days|nothing;
            limit_display python:99999;
            test nocall:view/test">

        <div id="document-toc" class="portlet toc agendaLinks" tal:condition="show_anchors">
            <h2 class="portletHeader">Months</h2>
            <ul>
                <li tal:repeat="month view/months|nothing">
                    <a tal:attributes="href string:${here_url}#${month/id}" tal:content="month/label" />
                </li>
            </ul>
        </div>

        <div metal:use-macro="context/@@folder_listing_z3/macros/text-field-view" />

        <tal:bymonth repeat="month view/months|nothing">
            <div class="tileItem">
                <tal:items define="folderContents python:month.get('items')">
                <a tal:condition="show_anchors" tal:attributes="name month/id" />
                <h2 class="tileHeadline"> <a tal:define="link_month_url month/link_month_url"
                                             tal:omit-tag="python: view.anonymous or not link_month_url" 
                                             tal:attributes="href link_month_url"><span tal:replace="month/label" /></a></h2>
                <div metal:use-macro="context/@@folder_listing_z3/macros/listing" />
                </tal:items>
            </div>
        </tal:bymonth>

      </metal:main_macro>
    </metal:fill>
  </body>
</html>
